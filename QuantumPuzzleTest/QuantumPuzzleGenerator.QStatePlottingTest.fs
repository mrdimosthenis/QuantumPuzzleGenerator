module QuantumPuzzleGenerator.QStatePlottingTest

open Xunit
open FsUnit.Xunit

open FSharpx.Collections

open QuantumPuzzleMechanics
open QuantumPuzzleGenerator.QStatePlotting

let sampleQState4 =
    [ [ Complex.ofNumbers 0.1689816124 -0.2397928746 ]
      [ Complex.ofNumbers 0.1460380625 0.1911942581 ]
      [ Complex.ofNumbers 0.1348747574 -0.01360647846 ]
      [ Complex.ofNumbers -0.1560892409 0.162675552 ]
      [ Complex.ofNumbers -0.2566864164 -0.209643826 ]
      [ Complex.ofNumbers 0.1064029632 -0.3203841137 ]
      [ Complex.ofNumbers -0.0112908212 0.1241081746 ]
      [ Complex.ofNumbers 0.2291828741 0.1085204133 ]
      [ Complex.ofNumbers -0.2694558194 0.116226412 ]
      [ Complex.ofNumbers 0.2056576183 -0.1374952252 ]
      [ Complex.ofNumbers 0.0239330094 0.07006200091 ]
      [ Complex.ofNumbers -0.1360830893 0.2760781599 ]
      [ Complex.ofNumbers -0.1172951558 -0.1075498039 ]
      [ Complex.ofNumbers 0.07358113317 0.2974524401 ]
      [ Complex.ofNumbers -0.3081663118 0.06972884607 ]
      [ Complex.ofNumbers 0.03056354898 0.1253263191 ] ]
    |> Utils.ofListOfLists

[<Fact>]
let ``Generated by quantum puzzles`` () =
    generatedByQuantumPuzzles 4 sampleQState4
    |> should equal """{"dotSizeRatioScale":1.0,"data":[{"x":0.1,"y":0.4,"z":0.4,"style":{"fill":"rgb(180, 180, 180)","stroke":"rgb(0, 255, 22)"}},{"x":0.3,"y":0.4,"z":0.4,"style":{"fill":"rgb(194, 194, 194)","stroke":"rgb(0, 31, 255)"}},{"x":0.1,"y":0.6,"z":0.4,"style":{"fill":"rgb(221, 221, 221)","stroke":"rgb(0, 255, 231)"}},{"x":0.3,"y":0.6,"z":0.4,"style":{"fill":"rgb(198, 198, 198)","stroke":"rgb(255, 0, 196)"}},{"x":0.1,"y":0.4,"z":0.6,"style":{"fill":"rgb(171, 171, 171)","stroke":"rgb(255, 167, 0)"}},{"x":0.3,"y":0.4,"z":0.6,"style":{"fill":"rgb(169, 169, 169)","stroke":"rgb(49, 255, 0)"}},{"x":0.1,"y":0.6,"z":0.6,"style":{"fill":"rgb(224, 224, 224)","stroke":"rgb(150, 0, 255)"}},{"x":0.3,"y":0.6,"z":0.6,"style":{"fill":"rgb(191, 191, 191)","stroke":"rgb(0, 147, 255)"}},{"x":0.7,"y":0.4,"z":0.4,"style":{"fill":"rgb(180, 180, 180)","stroke":"rgb(255, 0, 99)"}},{"x":0.9,"y":0.4,"z":0.4,"style":{"fill":"rgb(192, 192, 192)","stroke":"rgb(0, 255, 111)"}},{"x":0.7,"y":0.6,"z":0.4,"style":{"fill":"rgb(237, 237, 237)","stroke":"rgb(47, 0, 255)"}},{"x":0.9,"y":0.6,"z":0.4,"style":{"fill":"rgb(177, 177, 177)","stroke":"rgb(239, 0, 255)"}},{"x":0.7,"y":0.4,"z":0.6,"style":{"fill":"rgb(215, 215, 215)","stroke":"rgb(255, 181, 0)"}},{"x":0.9,"y":0.4,"z":0.6,"style":{"fill":"rgb(177, 177, 177)","stroke":"rgb(68, 0, 255)"}},{"x":0.7,"y":0.6,"z":0.6,"style":{"fill":"rgb(175, 175, 175)","stroke":"rgb(255, 0, 54)"}},{"x":0.9,"y":0.6,"z":0.6,"style":{"fill":"rgb(222, 222, 222)","stroke":"rgb(69, 0, 255)"}}]}"""

[<Fact>]
let ``Single plot html string`` () =
    singlePlotHtmlString 4 sampleQState4
    |> String.length
    |> should equal 173882

